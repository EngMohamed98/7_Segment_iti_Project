
_7_Segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  0000014a  000001be  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e4       	ldi	r30, 0x4A	; 74
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 a3 00 	jmp	0x146	; 0x146 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
  82:	cf 92       	push	r12
  84:	df 92       	push	r13
  86:	ef 92       	push	r14
  88:	ff 92       	push	r15
  8a:	0f 93       	push	r16
  8c:	1f 93       	push	r17
  8e:	df 93       	push	r29
  90:	cf 93       	push	r28
  92:	cd b7       	in	r28, 0x3d	; 61
  94:	de b7       	in	r29, 0x3e	; 62
  96:	64 97       	sbiw	r28, 0x14	; 20
  98:	0f b6       	in	r0, 0x3f	; 63
  9a:	f8 94       	cli
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	0f be       	out	0x3f, r0	; 63
  a0:	cd bf       	out	0x3d, r28	; 61
  a2:	8f ef       	ldi	r24, 0xFF	; 255
  a4:	8a bb       	out	0x1a, r24	; 26
  a6:	87 bb       	out	0x17, r24	; 23
  a8:	de 01       	movw	r26, r28
  aa:	11 96       	adiw	r26, 0x01	; 1
  ac:	e0 e6       	ldi	r30, 0x60	; 96
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	84 e1       	ldi	r24, 0x14	; 20
  b2:	01 90       	ld	r0, Z+
  b4:	0d 92       	st	X+, r0
  b6:	81 50       	subi	r24, 0x01	; 1
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x30>
  ba:	40 e0       	ldi	r20, 0x00	; 0
  bc:	50 e0       	ldi	r21, 0x00	; 0
  be:	a1 e0       	ldi	r26, 0x01	; 1
  c0:	b0 e0       	ldi	r27, 0x00	; 0
  c2:	64 ec       	ldi	r22, 0xC4	; 196
  c4:	79 e0       	ldi	r23, 0x09	; 9
  c6:	6e 01       	movw	r12, r28
  c8:	08 94       	sec
  ca:	c1 1c       	adc	r12, r1
  cc:	d1 1c       	adc	r13, r1
  ce:	88 ea       	ldi	r24, 0xA8	; 168
  d0:	e8 2e       	mov	r14, r24
  d2:	81 e6       	ldi	r24, 0x61	; 97
  d4:	f8 2e       	mov	r15, r24
  d6:	8e 01       	movw	r16, r28
  d8:	0b 5e       	subi	r16, 0xEB	; 235
  da:	1f 4f       	sbci	r17, 0xFF	; 255
  dc:	0f c0       	rjmp	.+30     	; 0xfc <main+0x7a>
  de:	2b b3       	in	r18, 0x1b	; 27
  e0:	cd 01       	movw	r24, r26
  e2:	04 2e       	mov	r0, r20
  e4:	02 c0       	rjmp	.+4      	; 0xea <main+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <main+0x64>
  ee:	28 2b       	or	r18, r24
  f0:	2b bb       	out	0x1b, r18	; 27
  f2:	cb 01       	movw	r24, r22
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <main+0x72>
  f8:	4f 5f       	subi	r20, 0xFF	; 255
  fa:	5f 4f       	sbci	r21, 0xFF	; 255
  fc:	48 30       	cpi	r20, 0x08	; 8
  fe:	51 05       	cpc	r21, r1
 100:	74 f3       	brlt	.-36     	; 0xde <main+0x5c>
 102:	40 e0       	ldi	r20, 0x00	; 0
 104:	50 e0       	ldi	r21, 0x00	; 0
 106:	2b b3       	in	r18, 0x1b	; 27
 108:	cd 01       	movw	r24, r26
 10a:	04 2e       	mov	r0, r20
 10c:	02 c0       	rjmp	.+4      	; 0x112 <main+0x90>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <main+0x8c>
 116:	80 95       	com	r24
 118:	82 23       	and	r24, r18
 11a:	8b bb       	out	0x1b, r24	; 27
 11c:	cb 01       	movw	r24, r22
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x9c>
 122:	4f 5f       	subi	r20, 0xFF	; 255
 124:	5f 4f       	sbci	r21, 0xFF	; 255
 126:	48 30       	cpi	r20, 0x08	; 8
 128:	51 05       	cpc	r21, r1
 12a:	69 f7       	brne	.-38     	; 0x106 <main+0x84>
 12c:	f6 01       	movw	r30, r12
 12e:	80 81       	ld	r24, Z
 130:	88 bb       	out	0x18, r24	; 24
 132:	c7 01       	movw	r24, r14
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <main+0xb2>
 138:	32 96       	adiw	r30, 0x02	; 2
 13a:	e0 17       	cp	r30, r16
 13c:	f1 07       	cpc	r31, r17
 13e:	b9 f7       	brne	.-18     	; 0x12e <main+0xac>
 140:	40 e0       	ldi	r20, 0x00	; 0
 142:	50 e0       	ldi	r21, 0x00	; 0
 144:	db cf       	rjmp	.-74     	; 0xfc <main+0x7a>

00000146 <_exit>:
 146:	f8 94       	cli

00000148 <__stop_program>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <__stop_program>
